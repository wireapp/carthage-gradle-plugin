name: Merge PR v0.1.5

on: 
  issue_comment:
    types: [created]

jobs:
  create_comment:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ADMINS: ('billypchan' 'marcoconti83' 'typfel' 'johnxnguyen' 'David-Henner' 'KaterinaWire')
    steps:
      - name: get release type
        id: releaseType
        run: |
          TYPE=`echo ${{ github.event.comment.body }} | cut -d " " -f 2`
          echo $TYPE
          echo "::set-output name=TYPE::$TYPE"
      - name: guard for magic spell
        if: ${{ github.event.comment.body != 'release major' && github.event.comment.body != 'release minor' && github.event.comment.body != 'release patch'}}
        run: exit 1
      - name: guard for admins
        run: |
          admins=${{ env.ADMINS }}
          adminFound=0
          for admin in ${admins[*]}
          do
            if [[ "$admin" == "${{ github.actor }}" ]]; then
              echo ${{ github.actor }} is allowed for releasing
              adminFound=1
            fi
          done
          
          if [ $adminFound = 0 ]; then
            echo ${{ github.actor }} is not allowed for releasing
            exit 1
          fi
      - uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Hello, @${{ github.actor }}! Merging PR for command **${{ github.event.comment.body}}** for PR #**${{ github.event.issue.number }}**. Will create a **${{ steps.releaseType.outputs.TYPE }}** release after merged
      - name: Merge Pull Request 
        id: mergePullRequest
        run: |
          if gh pr merge ${{ github.event.issue.html_url }} -s --admin; then
            echo merged!
            echo "::set-output name=mergeResult::1"
          else
            echo "::set-output name=mergeResult::0"
          fi
      - uses: actions-ecosystem/action-create-comment@v1
        if: ${{ steps.mergePullRequest.outputs.mergeResult == 0 }}
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Merging Failed. Please check the action log.
      - name: Merge Pull Request exit
        if: ${{ steps.mergePullRequest.outputs.mergeResult == 0 }}
        run: |
          echo exit for merger fail
          exit 1
      - name: Get the next version tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          release_branches: 'develop'
          default_bump: ${{ steps.releaseType.outputs.TYPE }}
          dry_run: 'true'
      - uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Next version is ${{ steps.tag_version.outputs.new_tag }}
      - name: get the latest develop SHA
        id: developSha
        run: |
          SHA=`git ls-remote ${{ github.event.repository.html_url}} develop | cut -f 1`
          echo "::set-output name=SHA::$SHA"
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.developSha.outputs.SHA }}
      - name: tagging new release version
        run: |
          git status
          git config --global user.name "zenkins"
          git config --global user.email "iosx@wire.com"
          git tag -a ${{ steps.tag_version.outputs.new_tag }} ${{ steps.developSha.outputs.SHA }} -m"tagged by github action"
          git push origin ${{ steps.tag_version.outputs.new_tag }}
